<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.lm.live.pet.dao.UserPetMapper">
	<resultMap type="com.lm.live.pet.domain.UserPet"  id="vo">
		<id property="id" column="id" />
		<result property="userId" column="userId" />
		<result property="petId" column="petId" />
		<result property="petName" column="petName" />
		<result property="level" column="level" />
		<result property="petPoint" column="petPoint" />
		<result property="status" column="status" />
		<result property="addTime" column="addTime" />
	</resultMap>

	<!-- 定义可重用的SQL代码段，可以包含在其他语句中 -->
	<sql id="base_column">
		 id
		 ,userId
		 ,petId
		 ,petName
		 ,level
		 ,petPoint
		 ,status
		 ,addTime
	</sql>
	
	<select id="getObjectById" parameterType="java.lang.Long" resultMap="vo">
		SELECT	<include refid="base_column" />
		FROM t_user_pet
		WHERE id= #{id}
	</select>	
	
	<!-- 正在使用的宠物 -->
	<select id="getUserPet" resultMap="vo">
		SELECT	<include refid="base_column" />
		FROM t_user_pet
		WHERE userId= #{userId}
		AND status = 1
		LIMIT 1
	</select>	
	
	<!-- 所有有效的宠物 -->
	<select id="listUserPet" resultMap="vo">
		SELECT	<include refid="base_column" />
		FROM t_user_pet
		WHERE userId= #{userId}
		AND status != 2
	</select>	
	
	<select id="getUserPetByCondition" resultMap="vo">
		SELECT	<include refid="base_column" />
		FROM t_user_pet
		WHERE userId= #{userId}
		AND petId= #{petId}
		LIMIT 1
	</select>	
	
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO t_user_pet
				(id
				,userId
				,petId
				,petName
				,level
				,petPoint
				,status
				,addTime
				)
		VALUES	(#{id}
				,#{userId}
				,#{petId}
				,#{petName}
				,#{level}
				,#{petPoint}
				,#{status}
				,#{addTime}
				)
	</insert>
	
	<!-- 加经验 -->
	<update id="addPoint">
		UPDATE t_user_pet SET petPoint = petPoint + #{petPoint}
		WHERE userId = #{userId} 
		AND petId = #{petId}
	</update>
	
	<!-- 升级，宠物等级设计应该是一级一级的升，不能同时跳跃升 -->
	<update id="addLevel">
		UPDATE t_user_pet SET level = level + 1
		WHERE userId = #{userId} 
		AND petId = #{petId}
	</update>
	
	
	<delete id="removeById" parameterType="java.lang.Long">
		DELETE FROM t_user_pet
		WHERE id = #{id}
	</delete>
	
	<update id="updateStatus">
		UPDATE t_user_pet SET status = #{status}
		WHERE userId = #{userId} 
		AND petId = #{petId}
	</update>
	
	
</mapper> 
